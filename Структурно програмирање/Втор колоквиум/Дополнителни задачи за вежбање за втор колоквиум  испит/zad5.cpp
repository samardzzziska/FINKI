/* Еден елемент се заматува ако се најде аритметичка средина на елементот и сите негови соседи.
 * Сосед на еден елемент се сите елементи кои припаѓаат на матрицата и се  околу истиот елемент (хоризонтално, вертикално и дијагонално).

Од стандарден влез се чита матрица од реални броеви (3 < n,m < 50). Прво се читаат бројот на редици и колони на матрицата и во секој преостанат ред се внесува еден ред од матрицата (види пример).По читањето на матрицата, се внесуваат и 2 пара координати на матрицата (ред и колона) кои го репрезентираат горниот-лев и долниот-десен елемент од регионот. Потребно е да генеирате нова матрица во која ќе ги заматите сите елементи кои припаѓаат на регионот.
Новодобиената матрица, во истиот формат, треба да се испечати (види пример). */
#include <iostream>
#include <cstring>

using namespace std;

int main () {

    int n, m;
    cin >> n >> m;
    double a[n][m], copy[n][m];
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> a[i][j];
        }
    }
    int x1,y1,x2,y2;
    cin >> x1 >> y1 >> x2 >> y2;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            double suma = 0;
            int count = 0;
            for (int x = i-1; x <= i+1; x++) {
                for (int y = j-1; y <= j+1; y++) {
                    if (x >= 0 && x < n && y >= 0 && y < m) {
                        suma += a[x][y];
                        count++;
                    }
                }
            }
            copy[i][j] = suma/count;
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (i >= x1 && j >= y1 && i <= x2 && j <= y2) {
                a[i][j] = copy[i][j];
            }
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cout << a[i][j] << " ";
        }
        cout << endl;
    }

    return 0;
}